@startuml

!include /home/dorspi/Documents/PlantUML/C4-PlantUML/C4_Container.puml

LAYOUT_WITH_LEGEND

title SmartSensor solution container diagram [Key: C4]

Person(user, "Consumer", "Product end user")


System_Boundary(c1, "SmartSensor solution") {

	Boundary(c2, "SmartSensor", "Sub-system") {
	
		Container(sensor_webapp, "Single-page web application", "C/Micropython/HTML", "Interface to configure the SmartSensor for first use.")
		
		Container(sensor_main, "Main application", "C/Micropython", "Monitors the plant's environment and publishes collected data.")
		
		Container(sensor_ota, "OTA Update application", "C/Micropython", "Downloads the latest software and updates the device.")
		
		ContainerDb(sensor_shared_fs, "Shared file system", "FAT", "Sensor configuration.")
		
	}


	Boundary(c4, "Back-End", "Sub-system") {
	
		Container(mqtt_broker, "Mosquitto MQTT broker", "C", "Receive published messages on topics / Send messages to topic subscribers.")
	
		Container(mqtt_client, "MQTT Client", "Python", "Subscribes to SmartSensor topics and stores received data. / Publishes data to SmartSensors.")
		
		ContainerDb(mqtt_data, "MQTT data", "ext4", "Files containing JSON data")
		
		Container(msg_proc, "Message processor(s)", "Python", "Applies processing to JSON message data and converts to GraphQL queries.")
		
		Container(api, "GraphQL API", "Python/Graphene", "Mediates communication between nodes and the Database.")
	
		ContainerDb(db, "Database", "MySQL", "Stores plant environment and customer data.")
		
	}
	
		
	Boundary(c3, "Front-End", "Sub-system") {
	
		Container(webapp, "Web application", "Javascript/React.js", "Provides insight in the plant's environment /  Provides an interface to change SmartSensor settings")	
		
	}
}

System_Ext(e1, "Source host", "Hosts the source code and software releases.")

' Relationships

Rel_R(user, sensor_webapp, "Configure WiFi connection using / Get sensor ID from", "HTTP")
Rel(user, sensor_main, "Observe status / Start synchronization")
Rel_R(user, webapp, "Configure SmartSensor / View plant environment data", "HTTPS")

Rel_R(sensor_webapp, sensor_shared_fs, "Store configuration in")
Rel_U(sensor_main, sensor_shared_fs, "Load configuration from")
Rel_D(sensor_main, mqtt_broker, "Send plant environment data to, get configuration from", "JSON/MQTT")

Rel(sensor_ota, sensor_shared_fs, "Store update")
Rel_R(sensor_ota, e1, "Download update from", "CoAP*")

Rel(webapp, api, "Get plant environment data from, send configuration change to", "HTTPS/GraphQL")

Rel_D(api, db, "Store data in / Load data from", "HTTPS/SQL")

Rel_U(mqtt_client, mqtt_broker, "Receive data from", "JSON/MQTT")
Rel(mqtt_client, mqtt_data, "Read / write JSON data")

Rel_R(msg_proc, mqtt_data, "Read / write JSON data")


Rel_D(msg_proc, api, "Store data in / Load data from", "HTTPS/GraphQL")

@enduml
